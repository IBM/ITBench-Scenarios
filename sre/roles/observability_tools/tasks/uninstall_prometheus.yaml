---
- name: Uninstall Prometheus Operator and Prometheus
  kubernetes.core.helm:
    kubeconfig: "{{ observability_tools_cluster.kubeconfig }}"
    release_name: "{{ helm_release.name }}"
    release_namespace: "{{ helm_release.namespace }}"
    release_state: absent
    wait: true
  when:
    - observability_tools_cluster.platform == "kubernetes"

- name: Retrieve all CRDs
  kubernetes.core.k8s_info:
    api_version: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    kubeconfig: "{{ observability_tools_cluster.kubeconfig }}"
  register: crd_info
  when:
    - observability_tools_cluster.platform == "kubernetes"

- name: Remove the Prometheus Operator related CRDs from the cluster
  kubernetes.core.k8s:
    kubeconfig: "{{ observability_tools_cluster.kubeconfig }}"
    resource_definition:
      api_version: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      metadata:
        name: "{{ item }}"
    state: absent
    wait: true
  loop: |
    {{
      crd_info.resources |
      selectattr('spec.group', '==', 'monitoring.coreos.com') |
      community.general.json_query('[*].metadata.name')
    }}
  when:
    - observability_tools_cluster.platform == "kubernetes"

- name: Retrieve all PrometheusRule instances in the release namespace
  kubernetes.core.k8s_info:
    api_version: monitoring.coreos.com/v1
    kind: PrometheusRule
    kubeconfig: "{{ observability_tools_cluster.kubeconfig }}"
    namespace: "{{ helm_release.namespace }}"
  register: prometheus_rule_info
  when:
    - observability_tools_cluster.platform == "openshift"

- name: Delete all PrometheusRule instances in the release namespace
  kubernetes.core.k8s:
    api_version: monitoring.coreos.com/v1
    delete_all: true
    kind: PrometheusRule
    kubeconfig: "{{ observability_tools_cluster.kubeconfig }}"
    namespace: "{{ helm_release.namespace }}"
    state: absent
    wait: true
  when:
    - observability_tools_cluster.platform == "openshift"
    - prometheus_rule_info.resources | length > 0

- name: Delete the release namespace
  kubernetes.core.k8s:
    kubeconfig: "{{ observability_tools_cluster.kubeconfig }}"
    resource_definition:
      api_version: v1
      kind: Namespace
      metadata:
        name: "{{ helm_release.namespace }}"
    state: absent
    wait: true

- name: Disable OpenShift user workload monitoring
  kubernetes.core.k8s:
    kubeconfig: "{{ observability_tools_cluster.kubeconfig }}"
    state: absent
    src: files/ocp-user-workload-monitoring.yaml
  when:
    - observability_tools_cluster.platform == "openshift"
