---
- name: Install OpenTelemetry Collector for Kubernetes Events
  kubernetes.core.helm:
    chart_ref: opentelemetry-collector
    chart_repo_url: https://open-telemetry.github.io/opentelemetry-helm-charts
    chart_version: 0.122.5
    kubeconfig: "{{ kubeconfig }}"
    release_name: "{{ helm_releases.kubernetes_events_collector.name }}"
    release_namespace: "{{ helm_releases.kubernetes_events_collector.namespace }}"
    release_state: present
    timeout: 10m0s
    values:
      mode: deployment
      replicaCount: 1
      presets:
        kubernetesEvents:
          enabled: true
      image:
        repository: otel/opentelemetry-collector-contrib
        tag: 0.123.0
      ports:
        jaeger-compact:
          enabled: false
        jaeger-thrift:
          enabled: false
        jaeger-grpc:
          enabled: false
        zipkin:
          enabled: false
      config:
        exporters:
          clickhouse:
            username: "{{ chart_values.kubernetes_events_collector.clickhouse.user }}"
            password: "{{ chart_values.kubernetes_events_collector.clickhouse.password }}"
            endpoint: "{{ chart_values.kubernetes_events_collector.clickhouse.internal_url }}"
            logs_table_name: otel_k8s_events_logs
        receivers:
          jaeger: null
          prometheus: null
          zipkin: null
        service:
          pipelines:
            logs:
              exporters:
                - debug
                - clickhouse
            metrics:
              receivers:
                - otlp
            traces:
              receivers:
                - otlp
    wait: true

- name: Install OpenTelemetry Operator
  kubernetes.core.helm:
    chart_ref: opentelemetry-operator
    chart_repo_url: https://open-telemetry.github.io/opentelemetry-helm-charts
    chart_version: 0.85.0
    kubeconfig: "{{ kubeconfig }}"
    release_name: "{{ helm_releases.operator.name }}"
    release_namespace: "{{ helm_releases.operator.namespace }}"
    release_state: present
    timeout: 10m0s
    values:
      manager:
        collectorImage:
          repository: otel/opentelemetry-collector-k8s
      admissionWebhooks:
        certManager:
          enabled: false
        autoGenerateCert:
          enabled: true
    wait: true

- name: Install Jaeger
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig }}"
    state: present
    resource_definition:
      apiVersion: opentelemetry.io/v1beta1
      kind: OpenTelemetryCollector
      metadata:
        name: jaeger
        namespace: "{{ helm_releases.kubernetes_events_collector.namespace }}"
      spec:
        image: jaegertracing/jaeger:2.6.0
        ports:
          - name: jaeger
            port: 16686
        config: "{{ lookup('ansible.builtin.template', 'templates/otel-jaeger-config.j2') | from_yaml }}"

- name: Wait for Jaeger Collector pods to be ready
  kubernetes.core.k8s_info:
    kubeconfig: "{{ kubeconfig }}"
    kind: Pod
    namespace: "{{ helm_releases.kubernetes_events_collector.namespace }}"
    label_selectors:
      - "app.kubernetes.io/name=jaeger-collector"
      - "app.kubernetes.io/instance=opentelemetry-collectors.jaeger"
      - "app.kubernetes.io/managed-by=opentelemetry-operator"
    wait: true
    wait_sleep: 30
    wait_timeout: 600
    wait_condition:
      type: Ready
      status: "True"

# NOTE: The rewrite annotation is not added to the following Ingress because
#       when rewriting the path, it adds the wrong Content-Type header to the
#       request. This cases the Jaeger UI to not work correctly.

- name: Deploy Ingress for Jaeger
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig }}"
    resource_definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: jaeger
        namespace: "{{ helm_releases.kubernetes_events_collector.namespace }}"
      spec:
        ingressClassName: nginx
        rules:
          - http:
              paths:
                - pathType: ImplementationSpecific
                  path: /jaeger
                  backend:
                    service:
                      name: "jaeger-collector"
                      port:
                        number: 16686
