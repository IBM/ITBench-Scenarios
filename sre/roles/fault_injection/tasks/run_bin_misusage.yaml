---
- name: Document this fault injection
  set_fact:
    injection_docs: "{{ injection_docs | default([]) + [curr_docs] }}"
  vars:
    curr_docs:
      name: "Binary misusage"
      author: "@Yinfang-Chen"
      description: "Binary misuage by updating the container command to a new command"
      application: "deathstarbench_hotel_reservations"
      fault_type: "Custom"
      required_fields:
        - "kubeconfig"
  tags:
    - injection_docs

- name: Patch the deployment to update the container command - binary misusage fault
  ansible.builtin.command:
    cmd: >
      kubectl patch deployment profile-hotel-reservations
      -n hotel-reservations
      --type=json
      -p '[{"op": "replace", "path": "/spec/template/spec/containers/0/command", "value": ["/go/bin/geo"]}]'
  environment:
    KUBECONFIG: "{{ kubeconfig }}"
  register: patch_result
  failed_when: patch_result.rc != 0
  when: is_fault_injection and is_bin_misuse

- name: Confirm the profile service is running with the new command
  ansible.builtin.shell: >
    kubectl get pods -n hotel-reservations
    -o jsonpath='{.items[*].spec.containers[?(@.name=="hotel-reserv-profile")].command}'
  environment:
    KUBECONFIG: "{{ kubeconfig }}"
  register: pod_command_check
  failed_when: "'/go/bin/geo' not in pod_command_check.stdout"
  when: is_fault_injection and is_bin_misuse

- name: Recovery method for binary misusage fault
  ansible.builtin.command:
    cmd: >
      kubectl patch deployment profile-hotel-reservations
      -n hotel-reservations
      --type=json
      -p '[{"op": "replace", "path": "/spec/template/spec/containers/0/command", "value": ["/go/bin/profile"]}]'
  environment:
    KUBECONFIG: "{{ kubeconfig }}"
  register: recovery_result
  failed_when: recovery_result.rc != 0
  when: is_fault_removal and is_bin_misuse

- name: Verify recovery was successful
  ansible.builtin.shell: >
    kubectl get pods -n hotel-reservations
    -o jsonpath='{.items[*].spec.containers[?(@.name=="hotel-reserv-profile")].command}'
  environment:
    KUBECONFIG: "{{ kubeconfig }}"
  register: recover_check
  failed_when: "'/go/bin/profile' not in recover_check.stdout"
  when: is_fault_removal and is_bin_misuse