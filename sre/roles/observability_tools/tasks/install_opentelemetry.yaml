---
- name: Create the release namespace for OpenTelemetry Collectors
  kubernetes.core.k8s:
    kubeconfig: "{{ observability_tools_cluster.kubeconfig }}"
    resource_definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ helm_releases.collectors.namespace }}"
        labels:
          it-bench/monitoring: "true"
    state: present

- name: Get Clickhouse credentials from secret
  kubernetes.core.k8s_info:
    kind: Secret
    kubeconfig: "{{ observability_tools_cluster.kubeconfig }}"
    name: "{{ helm_releases.clickhouse.name }}-credentials"
    namespace: "{{ helm_releases.clickhouse.namespace }}"
    wait: true
  register: clickhouse_secrets_info
  when:
    - observability_tools_enabled.stack.opentelemetry

- name: Install OpenTelemetry Collector for Kubernetes Events
  kubernetes.core.helm:
    chart_ref: opentelemetry-collector
    chart_repo_url: https://open-telemetry.github.io/opentelemetry-helm-charts
    chart_version: 0.122.5
    kubeconfig: "{{ observability_tools_cluster.kubeconfig }}"
    release_name: "{{ helm_releases.collectors.names.kubernetes_events }}"
    release_namespace: "{{ helm_releases.collectors.namespace }}"
    release_state: present
    timeout: 10m0s
    values:
      mode: deployment
      replicaCount: 1
      presets:
        kubernetesEvents:
          enabled: true
      image:
        repository: otel/opentelemetry-collector-contrib
        tag: 0.123.0
      podAnnotations:
        openshift.io/required-scc: restricted-v2
      ports:
        jaeger-compact:
          enabled: false
        jaeger-thrift:
          enabled: false
        jaeger-grpc:
          enabled: false
        zipkin:
          enabled: false
        metrics:
          enabled: "{{ observability_tools_enabled.stack.prometheus }}"
      serviceMonitor:
        enabled: "{{ observability_tools_enabled.stack.prometheus }}"
      config:
        exporters:
          clickhouse:
            username: "{{ clickhouse_secrets_info.resources[0].data.user | b64decode }}"
            password: "{{ clickhouse_secrets_info.resources[0].data.password | b64decode }}"
            endpoint: http://{{ helm_releases.clickhouse.name }}-clickhouse.{{ helm_releases.clickhouse.namespace }}.svc.cluster.local:8123
            logs_table_name: kubernetes_events
        service:
          pipelines:
            logs:
              exporters:
                - debug
                - clickhouse
    wait: true
  when:
    - observability_tools_enabled.stack.opentelemetry

- name: Create the release namespace for OpenTelemetry Operator
  kubernetes.core.k8s:
    kubeconfig: "{{ observability_tools_cluster.kubeconfig }}"
    resource_definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ helm_releases.operator.namespace }}"
        annotations:
          openshift.io/sa.scc.mcs: s0:c29,c9
          openshift.io/sa.scc.supplemental-groups: 65532/10000
          openshift.io/sa.scc.uid-range: 65000/10000
        labels:
          it-bench/monitoring: "true"
    state: present
  when:
    - observability_tools_enabled.stack.jaeger

- name: Install OpenTelemetry Operator
  kubernetes.core.helm:
    chart_ref: opentelemetry-operator
    chart_repo_url: https://open-telemetry.github.io/opentelemetry-helm-charts
    chart_version: 0.85.0
    kubeconfig: "{{ observability_tools_cluster.kubeconfig }}"
    release_name: "{{ helm_releases.operator.name }}"
    release_namespace: "{{ helm_releases.operator.namespace }}"
    release_state: present
    timeout: 10m0s
    values:
      manager:
        collectorImage:
          repository: otel/opentelemetry-collector-k8s
        podAnnotations:
          openshift.io/required-scc: restricted-v2
        serviceMonitor:
          enabled: "{{ observability_tools_enabled.stack.prometheus }}"
      admissionWebhooks:
        certManager:
          enabled: false
        autoGenerateCert:
          enabled: true
      securityContext:
        fsGroup:
    wait: true
  when:
    - observability_tools_enabled.stack.jaeger

- name: Install Jaeger
  kubernetes.core.k8s:
    kubeconfig: "{{ observability_tools_cluster.kubeconfig }}"
    state: present
    resource_definition:
      apiVersion: opentelemetry.io/v1beta1
      kind: OpenTelemetryCollector
      metadata:
        name: jaeger
        namespace: "{{ helm_releases.collectors.namespace }}"
      spec:
        image: jaegertracing/jaeger:2.6.0
        observability:
          metrics:
            enableMetrics: true
        podAnnotations:
          openshift.io/required-scc: restricted-v2
        ports:
          - name: jaeger
            port: 16686
        config:
          service:
            extensions:
              - jaeger_storage
              - jaeger_query
            pipelines:
              traces:
                receivers:
                  - otlp
                exporters:
                  - debug
                  - jaeger_storage_exporter
          extensions:
            jaeger_query:
              base_path: /jaeger
              storage:
                traces: traces_store
            jaeger_storage:
              backends:
                traces_store:
                  opensearch:
                    server_urls:
                      - http://{{ helm_releases.opensearch.name }}-cluster-master.{{ helm_releases.opensearch.namespace }}.svc.cluster.local:9200
          receivers:
            otlp:
              protocols:
                grpc:
                  endpoint: 0.0.0.0:4317
                http:
                  endpoint: 0.0.0.0:4318
          exporters:
            debug: {}
            jaeger_storage_exporter:
              trace_storage: traces_store
  when:
    - observability_tools_enabled.stack.jaeger

- name: Wait for Jaeger Collector pods to be ready
  kubernetes.core.k8s_info:
    kubeconfig: "{{ observability_tools_cluster.kubeconfig }}"
    kind: Pod
    namespace: "{{ helm_releases.collectors.namespace }}"
    label_selectors:
      - "app.kubernetes.io/name=jaeger-collector"
      - "app.kubernetes.io/instance=opentelemetry-collectors.jaeger"
      - "app.kubernetes.io/managed-by=opentelemetry-operator"
    wait: true
    wait_sleep: 30
    wait_timeout: 600
    wait_condition:
      type: Ready
      status: "True"
  when:
    - observability_tools_enabled.stack.jaeger
