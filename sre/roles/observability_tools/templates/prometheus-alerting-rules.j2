groups:
  - name: ClusterAlerts
    interval: 1m
    rules:
      - alert: HighPodFailureCount
        expr: sum by(namespace) (kube_pod_status_phase{phase="Failed"}) > 0
        annotations:
          description: 'Failure pod count in namespace {{ $labels.namespace }} is above 0 (current value: {{ $value }})'
          summary: High pod failure count detected in namespace {{ $labels.namespace }}.
      - alert: HighPodPendingCount
        expr: sum by(namespace) (kube_pod_status_phase{phase="Pending"}) > 0
        annotations:
          description: 'Pending pod count in namespace {{ $labels.namespace }} is above 0 (current value: {{ $value }})'
          summary: High pod pending count detected in namespace {{ $labels.namespace }}.
  - name: GoldenSignalAlerts
    interval: 1m
    rules:
      - alert: HighRequestLatency
        expr: histogram_quantile(0.95, sum by(le, service_name, namespace) (rate(traces_span_metrics_duration_milliseconds_bucket{service_name!~"flagd|otel-demo-loadgenerator"}[2m]))) > 1500
        for: 1m
        annotations:
          description: 'Latency in service {{ $labels.service_name }} in namespace {{ $labels.namespace }} is above 1500s (current value: {{ $value }}s)'
          summary: High latency detected in service {{ $labels.service_name }} in namespace {{ $labels.namespace }}.
      - alert: HighRequestErrorRate
        expr: sum by (service_name, namespace) (delta(traces_span_metrics_calls_total{status_code="STATUS_CODE_ERROR", service_name!~"flagd|otel-demo-loadgenerator"}[2m])) > 0
        for: 1m
        annotations:
          description: 'Request error rate in service {{ $labels.service_name }} in namespace {{ $labels.namespace }} is above 0 (current value: {{ $value }})'
          summary: Error rate is too high for service {{ $labels.service_name }} in namespace {{ $labels.namespace }}.
  - name: KafkaAlerts
    interval: 1m
    rules:
      - alert: HighKafkaConnectionClosureRate
        expr: sum by (job) (kafka_consumer_connection_close_rate) > 0
        for: 1m
        annotations:
          description: 'Job {{ $labels.job }} has a high closure rate above 0 (current value: {{ $value }})'
          summary: High connection closure rate detected in job {{ $labels.job }}.
{% if enable_finops_rules %}
  - name: AstronomyShopCostAlerts
    interval: 1m
    rules:
      - alert: HighCPUSpend
        expr: sum by (exported_namespace) (exported_container_exported_namespace_node:container_cpu_allocation_cost_per_node:avg5m{exported_container!="loadgenerator", exported_namespace="otel-demo"}) > 0.03
        for: 1m
        annotations:
          description: '{{ $labels.exported_namespace }} has exceeded the allocated budget for vCPU for 5m (current value: ${{ $value }})'
          summary: Overspend for vCPU detected in {{ $labels.exported_namespace }}.
      - alert: HighMemorySpend
        expr: sum by (exported_namespace) (exported_container_exported_namespace_node:container_memory_allocation_gigabytes_cost_per_node:avg5m{exported_container!="loadgenerator", exported_namespace="otel-demo"}) > 0.009
        for: 1m
        annotations:
          description: '{{ $labels.exported_namespace }} has exceeded the allocated budget for RAM for 5m (current value: ${{ $value }})'
          summary: Overspend for RAM detected in {{ $labels.exported_namespace }}.
  - name: AstronomyShopEfficiencyAlerts
    interval: 1m
    rules:
      - alert: LowCPUEfficiency
        expr: avg by (container, namespace) (container_namespace:container_cpu_usage_seconds_per_requests:ratio_irate5m{container!="loadgenerator", namespace="otel-demo"}) * 100 < 85
        for: 1m
        annotations:
          description: '{{ $labels.container }} in {{ $labels.namespace }} has a cpu efficiency below 85% for 5m (current value: {{ $value }}%)'
          summary: Low vCPU efficiency detected in {{ $labels.container }}.
      - alert: LowMemoryEfficiency
        expr: avg by (container, namespace) (container_namespace:container_memory_working_set_bytes_per_requests_bytes:ratio_avg5m{container!="loadgenerator", namespace="otel-demo"}) * 100 < 70
        for: 1m
        annotations:
          description: '{{ $labels.container }} in {{ $labels.namespace }} has a memory efficiency below 70% for 5m (current value: {{ $value }}%)'
          summary: Low memory efficiency detected in {{ $labels.container }}.
{% endif %}
