---
- name: Install Clickhouse Operator and Clickhouse
  kubernetes.core.helm:
    chart_ref: clickhouse
    chart_repo_url: https://helm.altinity.com
    chart_version: 0.2.2
    kubeconfig: "{{ kubeconfig }}"
    release_name: "{{ helm_release.name }}"
    release_namespace: "{{ helm_release.namespace }}"
    release_state: present
    timeout: 10m0s
    values:
      clickhouse:
        defaultUser:
          allowExternalAccess: true
        podSecurityContext:
          runAsUser: 101
          runAsGroup: 101
          fsGroup: 101
    wait: true

- name: Wait for Clickhouse install to complete
  kubernetes.core.k8s_info:
    api_version: clickhouse.altinity.com/v1
    kind: ClickHouseInstallation
    name: "{{ helm_release.name }}"
    namespace: "{{ helm_release.namespace }}"
    kubeconfig: "{{ kubeconfig }}"
    wait: true
  register: clickhouse_installation_info
  until:
    - clickhouse_installation_info.resources[0].status.status is defined
    - clickhouse_installation_info.resources[0].status.status == 'Completed'
  retries: 10
  delay: 30

- name: Deploy Ingress for Clickhouse
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig }}"
    resource_definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: "{{ helm_release.name }}"
        namespace: "{{ helm_release.namespace }}"
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: /$2
      spec:
        ingressClassName: nginx
        rules:
          - http:
              paths:
                - pathType: ImplementationSpecific
                  path: /clickhouse(/|$)(.*)
                  backend:
                    service:
                      name: "{{ helm_release.name }}-clickhouse"
                      port:
                        number: 8123

- name: Get Clickhouse credentials from secret
  kubernetes.core.k8s_info:
    kind: Secret
    name: "{{ helm_release.name }}-credentials"
    namespace: "{{ helm_release.namespace }}"
    kubeconfig: "{{ kubeconfig }}"
    wait: true
  register: clickhouse_secrets_info

- name: Extract Clickhouse credentials from secret data
  ansible.builtin.set_fact:
    clickhouse_user: "{{ clickhouse_secrets_info.resources[0].data.user | b64decode }}"
    clickhouse_password: "{{ clickhouse_secrets_info.resources[0].data.password | b64decode }}"
