---
- name: Get all custom resource definitions - CRDs
  kubernetes.core.k8s_info:
    kubeconfig: "{{ tools_cluster.kubeconfig }}"
    api_version: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
  register: all_crds

- name: Extract chaos-mesh resource types - CRDs
  ansible.builtin.set_fact:
    chaos_mesh_crds: "{{ all_crds.resources | selectattr('spec.group', 'search', 'chaos-mesh') | list }}"

- name: Get all instances of each chaos-mesh resource type
  kubernetes.core.k8s_info:
    kubeconfig: "{{ tools_cluster.kubeconfig }}"
    api_version: "{{ item.spec.group }}/{{ item.spec.versions[0].name }}"
    kind: "{{ item.spec.names.kind }}"
  loop: "{{ chaos_mesh_crds }}"
  register: chaos_mesh_resources_info
  failed_when: false
  no_log: true

- name: Flatten all chaos-mesh instances into single list
  ansible.builtin.set_fact:
    chaos_mesh_instances: "{{ chaos_mesh_resources_info.results | selectattr('resources', 'defined') | map(attribute='resources') | flatten | list }}"

- name: Remove finalizers from chaos-mesh resources
  kubernetes.core.k8s:
    kubeconfig: "{{ tools_cluster.kubeconfig }}"
    definition:
      apiVersion: "{{ item.apiVersion }}"
      kind: "{{ item.kind }}"
      metadata:
        name: "{{ item.metadata.name }}"
        namespace: "{{ item.metadata.namespace }}"
        finalizers: []
    state: present
  loop: "{{ chaos_mesh_instances }}"
  register: remove_finalizers_result
  failed_when: false
  when: chaos_mesh_instances | length > 0

- name: Delete each chaos-mesh resource instance
  kubernetes.core.k8s:
    kubeconfig: "{{ tools_cluster.kubeconfig }}"
    state: absent
    definition:
      apiVersion: "{{ item.apiVersion }}"
      kind: "{{ item.kind }}"
      metadata:
        name: "{{ item.metadata.name }}"
        namespace: "{{ item.metadata.namespace | default(omit) }}"
  loop: "{{ chaos_mesh_instances }}"
  register: delete_chaos_mesh_experiments_result
  failed_when: false
  when: chaos_mesh_instances | length > 0
