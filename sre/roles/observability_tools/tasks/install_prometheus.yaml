---
- name: Create Prometheus rules list
  set_fact:
    prometheus_rules: []

- name: Load OpenCost recording rules from yaml
  set_fact:
    opencost_recording_rules: "{{ lookup('ansible.builtin.file', 'files/recording_rules_opencost.yaml')| from_yaml }}"
  when:
    - domain == "finops"

- name: Add OpenCost rules to Prometheus rules list
  set_fact:
    prometheus_rules: "{{ prometheus_rules + opencost_recording_rules }}"
  when:
    - domain == "finops"

- name: Deploy the Prometheus stack
  kubernetes.core.helm:
    name: "{{ prometheus_installation_name }}"
    kubeconfig_path: "{{ kubeconfig }}"
    chart_ref: prometheus-community/prometheus
    chart_version: "{{ prometheus_chart_version }}"
    release_namespace: "{{ prometheus_namespace_project_name }}"
    release_state: present
    create_namespace: true
    values:
      server:
        extraFlags:
          - web.enable-lifecycle
          - web.enable-otlp-receiver
      serverFiles:
        alerting_rules.yml: {}
        recording_rules.yml:
          groups: "{{ prometheus_rules }}"
      prometheus-pushgateway:
        enabled: false

- name: Deploy Ingress for Prometheus and AlertManager frontends
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig }}"
    resource_definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: prometheus
        namespace: "{{ prometheus_namespace_project_name }}"
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: /$2
      spec:
        ingressClassName: nginx
        rules:
          - http:
              paths:
                - pathType: ImplementationSpecific
                  path: /prometheus(/|$)(.*)
                  backend:
                    service:
                      name: "{{ prometheus_installation_name }}-server"
                      port:
                        number: 80
          - http:
              paths:
                - pathType: ImplementationSpecific
                  path: /alertmanager(/|$)(.*)
                  backend:
                    service:
                      name: "{{ prometheus_installation_name }}-alertmanager"
                      port:
                        number: 9093
