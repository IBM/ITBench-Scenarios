---
- name: Add Helm chart repo from the OpenTelemetry community
  kubernetes.core.helm_repository:
    name: open-telemetry
    kubeconfig_path: "{{ kubeconfig }}"
    repo_url: "https://open-telemetry.github.io/opentelemetry-helm-charts"

- name: Update Helm repo
  kubernetes.core.helm:
    name: dummy
    kubeconfig_path: "{{ kubeconfig }}"
    state: absent
    release_namespace: "{{ otel_astronomy_app_namespace_project_name }}"
    update_repo_cache: true

- name: Get Clickhouse credentials from secret
  kubernetes.core.k8s_info:
    kind: Secret
    name: clickhouse-credentials
    namespace: "{{ clickhouse_namespace_project_name }}"
    kubeconfig: "{{ kubeconfig }}"
    wait: true
  register: clickhouse_secrets_info

- name: Extract Clickhouse credentials from secret data
  ansible.builtin.set_fact:
    clickhouse_user: "{{ clickhouse_secrets_info.resources[0].data.user | b64decode }}"
    clickhouse_password: "{{ clickhouse_secrets_info.resources[0].data.password | b64decode }}"

- name: Deploy OpenTelemetry's Astronomy Shop Demo
  kubernetes.core.helm:
    name: "{{ otel_astronomy_app_installation_name }}"
    kubeconfig_path: "{{ kubeconfig }}"
    chart_ref: open-telemetry/opentelemetry-demo
    chart_version: "{{ otel_astronomy_app_chart_version }}"
    release_namespace: "{{ otel_astronomy_app_namespace_project_name }}"
    release_state: present
    wait: true
    create_namespace: true
    values:
      components:
        accounting:
          resources:
            requests:
              cpu: 10m
              memory: 100Mi
            limits:
              memory: 256Mi
        ad:
          resources:
            requests:
              cpu: 10m
              memory: 250Mi
            limits:
              memory: 512Mi
        cart:
          resources:
            requests:
              cpu: 25m
              memory: 100Mi
        checkout:
          resources:
            requests:
              cpu: 10m
              memory: 15Mi
            limits:
              memory: 32Mi
        currency:
          resources:
            requests:
              cpu: 25m
              memory: 10Mi
        email:
          resources:
            requests:
              cpu: 10m
              memory: 75Mi
        flagd:
          resources:
            requests:
              cpu: 15m
              memory: 75Mi
            limits:
              memory: 512Mi
        fraud-detection:
          resources:
            requests:
              cpu: 25m
              memory: 300Mi
            limits:
              memory: 512Mi
        frontend:
          resources:
            requests:
              cpu: 300m
              memory: 125Mi
        frontend-proxy:
          resources:
            requests:
              cpu: 75m
              memory: 25Mi
            limits:
              memory: 75Mi
        image-provider:
          resources:
            requests:
              cpu: 10m
              memory: 25Mi
        kafka:
          resources:
            requests:
              cpu: 25m
              memory: 550Mi
            limits:
              memory: 800Mi
        load-generator:
          imageOverride:
            repository: quay.io/it-bench/loadgenerator
            tag: "0.3"
          resources:
            limits:
              memory: 2048Mi
        payment:
          resources:
            requests:
              cpu: 10m
              memory: 100Mi
        product-catalog:
          resources:
            requests:
              cpu: 50m
              memory: 15Mi
            limits:
              memory: 32Mi
        quote:
          resources:
            requests:
              cpu: 10m
              memory: 25Mi
        recommendation:
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
        shipping:
          resources:
            requests:
              cpu: 10m
              memory: 10Mi
        valkey-cart:
          resources:
            requests:
              cpu: 10m
              memory: 10Mi
      grafana:
        enabled: false
      jaeger:
        enabled: false
      opensearch:
        enabled: false
      opentelemetry-collector:
        podAnnotations:
          prometheus.io/path: /metrics
          prometheus.io/port: "80"
        config:
          connectors:
            spanmetrics:
              dimensions:
                - name: namespace
                  default: "{{ otel_astronomy_app_namespace_project_name }}"
          exporters:
            clickhouse:
              username: "{{ clickhouse_user }}"
              password: "{{ clickhouse_password }}"
              endpoint: tcp://{{ clickhouse_installation_name }}-clickhouse.{{ clickhouse_namespace_project_name }}.svc.cluster.local:9000
              logs_table_name: otel_demo_logs
              traces_table_name: otel_demo_traces
            opensearch:
              http:
                endpoint: "http://opensearch-cluster-master.{{ opensearch_namespace_project_name }}.svc.cluster.local:9200"
            otlp:
              endpoint: "{{ opentelemetry_operator_collector_jaeger_name }}-collector.{{ opentelemetry_operator_collectors_namespace }}.svc.cluster.local:4317"
            otlphttp/prometheus:
              endpoint: http://{{ prometheus_service_name }}.{{ prometheus_namespace_project_name }}.svc.cluster.local:80/api/v1/otlp
          service:
            pipelines:
              traces:
                exporters: [otlp, debug, spanmetrics, clickhouse]
              logs:
                exporters: [opensearch, debug, clickhouse]
        resources:
          requests:
            cpu: 100m
            memory: 150Mi
          limits:
            memory: 512Mi
      prometheus:
        enabled: false
