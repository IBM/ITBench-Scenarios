---
- name: Manage SRE and FinOps Incident Environment Tool Stack
  hosts:
    - environment
  tasks:
    - name: Check for OpenShift annotations on nodes
      kubernetes.core.k8s_info:
        kubeconfig: "{{ cluster.kubeconfig }}"
        api_version: v1
        kind: Node
        label_selectors:
          - node.openshift.io/os_id = rhcos
      register: openshift_nodes_info
      tags:
        - always

    - name: Set cluster platform as OpenShift
      ansible.builtin.set_fact:
        cluster_platform: openshift
      tags:
        - always
      when:
        - openshift_nodes_info.resources | length > 0

    - name: Set cluster platform as Kubernetes
      ansible.builtin.set_fact:
        cluster_platform: kubernetes
      tags:
        - always
      when:
        - openshift_nodes_info.resources | length == 0

    # - name: Load variables from incident
    # - name: Overwrite variables using incident spec

    - name: Import observability tools role
      ansible.builtin.import_role:
        name: observability_tools
      vars:
        observability_tools_cluster:
          kubeconfig: "{{ cluster.kubeconfig }}"
          platform: "{{ cluster_platform }}"
        observability_tools_enabled:
          stack:
            clickhouse: "{{ observability_tools.clickhouse | default(false) }}"
            ingress: "{{ observability_tools.ingress | default(false) }}"
            jaeger: "{{ observability_tools.jaeger | default(false) }}"
            opencost: "{{ observability_tools.opencost | default(false) }}"
            opensearch: "{{ observability_tools.opensearch | default(false) }}"
            opentelemetry: "{{ observability_tools.opentelemetry | default(false) }}"
            prometheus: "{{ observability_tools.prometheus | default(false) }}"
          kubernetes:
            topology_monitor: "{{ observability_tools.kubernetes_topology_monitor | default(false) }}"

    - name: Import fault tools role
      ansible.builtin.import_role:
        name: fault_tools
      vars:
        fault_tools_cluster:
          kubeconfig: "{{ cluster.kubeconfig }}"
          platform: "{{ cluster_platform }}"
        fault_tools_enabled:
          chaos_mesh: "{{ fault_tools.chaos_mesh | default(false) }}"
          kubernetes_metrics_server: "{{ fault_tools.kubernetes_metrics_server | default(false) }}"
