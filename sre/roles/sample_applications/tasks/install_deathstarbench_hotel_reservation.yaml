---
- name: Clone fork of DeathStarBench repository
  ansible.builtin.git:
    repo: https://github.com/it-bench/DeathStarBench.git
    dest: roles/sample_applications/DeathStarBench
    single_branch: yes
    version: master
    force: yes

- name: Create custom Security Context Constraint (SCC) for OpenTelemetry's Astronomy Shop
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig }}"
    state: present
    resource_definition:
      apiVersion: security.openshift.io/v1
      kind: SecurityContextConstraints
      metadata:
        name: dsb-hotel-reservation-scc
      allowPrivilegedContainer: true
      allowPrivilegeEscalation: true
      readOnlyRootFilesystem: false
      defaultAddCapabilities: []
      requiredDropCapabilities:
        - ALL
      runAsUser:
        type: RunAsAny
      seLinuxContext:
        type: RunAsAny
      fsGroup:
        type: RunAsAny
      supplementalGroups:
        type: RunAsAny
      seccompProfiles:
        - 'runtime/default'
  when:
    - (is_openshift | default(false))

- name: Apply SCC to all service accounts in a Clickhouse and Opentelemetry operator namespaces
  ansible.builtin.command:
    cmd: >
      oc adm policy add-scc-to-group dsb-hotel-reservation-scc system:serviceaccounts:{{ deathstarbench_hotelreservation_app_installation_name }}
  environment:
    KUBECONFIG: "{{ kubeconfig }}"
  when:
    - (is_openshift | default(false))

- name: Deploy DeathStarBench's Hotel Reservation
  kubernetes.core.helm:
    name: "{{ deathstarbench_hotelreservation_app_installation_name }}"
    kubeconfig_path: "{{ kubeconfig }}"
    chart_ref: roles/sample_applications/DeathStarBench/hotelReservation/helm-chart/hotelreservation
    release_namespace: "{{ deathstarbench_hotelreservation_app_namespace_project_name }}"
    release_state: present
    create_namespace: true
    wait: true
    timeout: 10m0s
    values:
      global:
        monitoring:
          centralJaegerAddress: "{{ opentelemetry_operator_collector_jaeger_name }}-collector.{{ opentelemetry_operator_collectors_namespace }}.svc.cluster.local"
          centralPrometheusAddress: "http://{{ prometheus_service_name }}.{{ prometheus_namespace_project_name }}.svc.cluster.local:80/api/v1/otlp"
          defaultJaegerEnabled: false
          otelAddress: "otel-collector-{{ deathstarbench_hotelreservation_app_installation_name }}.{{ deathstarbench_hotelreservation_app_namespace_project_name }}.svc.cluster.local"
        nameOverride: "{{ deathstarbench_hotelreservation_app_installation_name }}"
